<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hello World</title>
    <link>/</link>
    <description>Recent content on Hello World</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>yikang.yang95@gmail.com (Yikang Yang)</managingEditor>
    <webMaster>yikang.yang95@gmail.com (Yikang Yang)</webMaster>
    <lastBuildDate>Fri, 11 Jan 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Some Array Manipulation Problems</title>
      <link>/post/2019-01-11-some-array-manipulation-problems/</link>
      <pubDate>Fri, 11 Jan 2019 00:00:00 +0000</pubDate>
      <author>yikang.yang95@gmail.com (Yikang Yang)</author>
      <guid>/post/2019-01-11-some-array-manipulation-problems/</guid>
      <description>What is Array? An array is an aggregate data structure that is designed to store a group of objects of the same or different types. In python array is simply represented as one list with the complexity table.
   case append get item set item get slice    Avg complexity \(O(1)\) \(O(1)\) \(O(1)\) \(O(k)\)      Problems This blog is to keep log of some basic array manipulation problems collected these days to help understand.</description>
    </item>
    
    <item>
      <title>Linked List and Classic problems</title>
      <link>/post/2019-01-08-linkedlist-and-problems/</link>
      <pubDate>Tue, 08 Jan 2019 00:00:00 +0000</pubDate>
      <author>yikang.yang95@gmail.com (Yikang Yang)</author>
      <guid>/post/2019-01-08-linkedlist-and-problems/</guid>
      <description>In preparing for the coding interview, I will start writing blogs to record the hints and tips about the basic data structures. The series of the blog will start from Linked List in this one.
Definition: According to the book, Cracking the Coding Interview, a linked list is a data structure that represents a sequence of nodes where each node stores a value and points to next node.
diagram</description>
    </item>
    
    <item>
      <title>Find the Longest Successive Path in a Matrix</title>
      <link>/post/2018-12-24-find-longest-succ-path/</link>
      <pubDate>Mon, 24 Dec 2018 00:00:00 +0000</pubDate>
      <author>yikang.yang95@gmail.com (Yikang Yang)</author>
      <guid>/post/2018-12-24-find-longest-succ-path/</guid>
      <description>Problem This is a coding problem which I previously failed in a online test. You are given a matrix filled with positive numbers and the task is build a function that could return the longest successive sequence in this matrix. The sequence must be in ascending order. \[ M = \left[ \begin{array}{rrrrr} 4 &amp;amp; 1 &amp;amp; 3 \\ 4 &amp;amp; 7 &amp;amp; 6 \\ 8 &amp;amp; 9 &amp;amp; 10 \\ \end{array} \right] \]</description>
    </item>
    
    <item>
      <title>Verify Path In Matrix</title>
      <link>/post/2018-12-24-find-path-in-matrix/</link>
      <pubDate>Mon, 24 Dec 2018 00:00:00 +0000</pubDate>
      <author>yikang.yang95@gmail.com (Yikang Yang)</author>
      <guid>/post/2018-12-24-find-path-in-matrix/</guid>
      <description>Problem You are given a matrix filled with characters and a string. Task is building a function to find out whether the string exist in the matrix. For example, suppose we have a matrix like following: \[ M = \left[ \begin{array}{rrrrr} A &amp;amp; B &amp;amp; C \\ G &amp;amp; D &amp;amp; X \\ E &amp;amp; F &amp;amp; Y \\ \end{array} \right] \] and a string “AGDXY”, then the function should return True because the string could be represented by a path in the matrix.</description>
    </item>
    
    <item>
      <title>Area of Overlapping Rectangle</title>
      <link>/post/2018-12-23-overlapping-rectangle/</link>
      <pubDate>Sun, 23 Dec 2018 00:00:00 +0000</pubDate>
      <author>yikang.yang95@gmail.com (Yikang Yang)</author>
      <guid>/post/2018-12-23-overlapping-rectangle/</guid>
      <description>Problem Given two over-lapping rectangles on a plane. And there are bottom-left and top-right points for each rectangle. Assuming every side of each rectangle must be parallel to x-axis or y-axis.
overlapping-rectangle
 The task is computing the overlapping area.
 Approach Since the order of given points are fixed. i.e. \(Rect_{b_1}\),\(Rect_{t_1}\),\(Rect_{b_2}\), \(Rect_{t_2}\), where \(Rect_{b_i}\) refer to the bottom point of rectangle \(i\) and \(b\Rightarrow bottom\), \(t\Rightarrow top\). The direct approach is sorting four points according both \(x\) and \(y\), then the two points in the middle will define the overlapping rectangle.</description>
    </item>
    
    <item>
      <title>Largest Square of 1’s from A Matrix</title>
      <link>/post/2018-12-23-largest-sqaure-of-1-from-matrix/</link>
      <pubDate>Sun, 23 Dec 2018 00:00:00 +0000</pubDate>
      <author>yikang.yang95@gmail.com (Yikang Yang)</author>
      <guid>/post/2018-12-23-largest-sqaure-of-1-from-matrix/</guid>
      <description>Problem Statement Find the Largest square of 1’s from a matrix. For example, given a matrix:
\[ M = \left[ \begin{array}{rrrrr} 1 &amp;amp; 1 &amp;amp; 0 &amp;amp; 1 &amp;amp; 0 \\ 0 &amp;amp; 1 &amp;amp; 1 &amp;amp; 1 &amp;amp; 0 \\ 1 &amp;amp; 1 &amp;amp; 1 &amp;amp; 1 &amp;amp; 0 \\ 0 &amp;amp; 1 &amp;amp; 1 &amp;amp; 1 &amp;amp; 1 \\ \end{array} \right] \] Suppose the index set for row and column are \[i \in [1,4] \cap \mathbb{N}_{+}\] and \[j \in [1, 5] \cap \mathbb{N}_{+}\].</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/page/about/</link>
      <pubDate>Thu, 05 May 2016 21:48:51 -0700</pubDate>
      <author>yikang.yang95@gmail.com (Yikang Yang)</author>
      <guid>/page/about/</guid>
      <description>This is a &amp;ldquo;hello world&amp;rdquo; example website for the blogdown package. The theme was forked from @jrutheiser/hugo-lithium-theme and modified by Yihui Xie.</description>
    </item>
    
  </channel>
</rss>